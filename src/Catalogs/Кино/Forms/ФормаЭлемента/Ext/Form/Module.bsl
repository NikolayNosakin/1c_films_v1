&НаКлиенте
Перем ВыполняетсяЗапись;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	СкрыватьПросмотренныеСерии = ПолучитьФункциональнуюОпцию("СкрыватьПросмотренныеСерии");		
	ЕстьВозможностьЗаполнятьПоКинопоиску = ПолучитьФункциональнуюОпцию("ИспользуетсяЗаполнениеИзКинопоискаПоАПИ");
	Элементы.ФормаЗаполнитьПоКинопоиску.Видимость = ЕстьВозможностьЗаполнятьПоКинопоиску;
	Элементы.ЗаполнитьСерииСезоныПоКинопоиску.Видимость = ЕстьВозможностьЗаполнятьПоКинопоиску;
	ВидимостьПоТипу();	
	ОбновитьСписокЗначенийЖанры();	
	ОбновитьСписокЗначенийСтраны();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() Тогда
		ВставитьИзБуфераОбмена(Неопределено);
	КонецЕсли;	
	ПоказатьСкрытьСерии(НЕ СкрыватьПросмотренныеСерии);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокЗначенийЖанры()	
	ТЗ = Объект.Жанры.Выгрузить();
	Жанры.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("Жанр"));
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокЗначенийСтраны()
	ТЗ = Объект.Страны.Выгрузить();
	Страны.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("Страна"));
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСсылкуКинопоиск(Команда)
	Тип = ОпределитьСсылкуКинопоиск();
	Если НЕ Тип = "" Тогда
		ПерейтиПоНавигационнойСсылке("https://www.kinopoisk.ru/" + Тип + "/" + Объект.КодКинопоиск);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОпределитьСсылкуКинопоиск()
	Если Объект.Тип = Перечисления.ТипыКино.Мультфильм ИЛИ Объект.Тип = Перечисления.ТипыКино.Фильм Тогда
		Тип = "film";
	ИначеЕсли Объект.Тип = Перечисления.ТипыКино.Сериал ИЛИ Объект.Тип = Перечисления.ТипыКино.Мультсериал Тогда
		Тип = "series";
	Иначе	
		Тип = "";
	КонецЕсли;
	Возврат Тип
КонецФункции

&НаСервере
Процедура ВидимостьПоТипу()
	Если Объект.Тип = Перечисления.ТипыКино.Сериал ИЛИ Объект.Тип = Перечисления.ТипыКино.Мультсериал Тогда
		Элементы.Год.Заголовок = "Год выпуска";
		Элементы.ГодОкончания.Видимость = Истина;
		Элементы.КоличествоСезонов.Видимость = Истина;
		Элементы.Группа6.Видимость = Истина;
		Элементы.ПоказатьПросмотренныеСерии.Видимость = СкрыватьПросмотренныеСерии;
	Иначе
		Элементы.Год.Заголовок = "Год";
		Элементы.ГодОкончания.Видимость = Ложь;
		Элементы.КоличествоСезонов.Видимость = Ложь; 
		Элементы.Группа6.Видимость = Ложь;
		Элементы.ПоказатьПросмотренныеСерии.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипПриИзменении(Элемент)
	ВидимостьПоТипу();
КонецПроцедуры

&НаСервере
Процедура ЖанрыПриИзмененииНаСервере()	
	Объект.Жанры.Очистить();
	Для каждого стр из Жанры Цикл
		Строка = Объект.Жанры.Добавить();
		Строка.Жанр = стр.Значение;
	КонецЦикла; 
	СвернутьТабличнуюЧастьНаСервере("Жанры","Жанр");
	ОбновитьСписокЗначенийЖанры();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЖанрыПриИзменении(Элемент)
	ЖанрыПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗаполнитьСерииПоСезону(Команда)
	Сезон = Ждать ВвестиЧислоАсинх(,"Номер сезона",3,0);
	Серии = Ждать ВвестиЧислоАсинх(,"Количество серий",4,0);	
	Для Сч = 1 По Серии Цикл
		Серия = Объект.Серии.Добавить();
		Серия.Сезон = Сезон;
		Серия.Серия = Сч;	
	КонецЦикла; 
	ЭтаФорма.Модифицированность = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьПросмотренные(Команда)
	ОбработатьПросмотрыСервер(Истина);
КонецПроцедуры

&НаСервере
Процедура ОбработатьПросмотрыСервер(Пометка)
	Для каждого Строка из Объект.Серии Цикл
		Если НЕ Строка.Просмотрена = Пометка Тогда 			
			Строка.Просмотрена = Пометка; 
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура УбратьПросмотренные(Команда)
	ОбработатьПросмотрыСервер(Ложь);
КонецПроцедуры

&НаСервере
Процедура СтраныПриИзмененииНаСервере()
	Объект.Страны.Очистить();
	Для каждого стр из Страны Цикл
		Строка = Объект.Страны.Добавить();
		Строка.Страна = стр.Значение;
	КонецЦикла;
	СвернутьТабличнуюЧастьНаСервере("Страны","Страна");
	ОбновитьСписокЗначенийСтраны();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СтраныПриИзменении(Элемент)
	СтраныПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСсылкуIMDB(Команда)
	Если НЕ Объект.КодIMDB = "" Тогда
		ПерейтиПоНавигационнойСсылке("https://www.imdb.com/title/" + Объект.КодIMDB);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКинопоиску(Команда)
	ЗаполнитьПроверка(Новый структура("Фильм,СезоныСерии",Истина,Ложь));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПроверка(Парам)
	Если Объект.КодКинопоиск = "" Тогда
		Сообщить(Нстр("ru = 'Заполните код кинопоиска.';
					|en = 'Fill in the kinopoisk code.'"));
	ИначеЕсли СлужебноеКлиент.УстройствоИмеетДоступВИнтернет() Тогда
		ПоказатьДлительнуюОперацию(Истина);		
		ЗаполнитьИзКинопоискаОповещение(Парам);
	Иначе
		Сообщить(Нстр("ru = 'Интернет соединение отключено.';
					|en = 'The Internet connection is disabled.'"));	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗаполнитьИзКинопоискаОповещение(Парам) 
	
	ЗаполнитьПоКинопоискуСервер(Парам.Фильм,Парам.СезоныСерии);
	Если НЕ Парам.СезоныСерии И ОпределитьСсылкуКинопоиск() = "series" Тогда
		ЗаполнитьПоКинопоискуСервер(Ложь,Истина);
	КонецЕсли;
	ВидимостьПоТипу();
	ЭтаФорма.Модифицированность = Истина;
	ПоказатьДлительнуюОперацию(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСерииСезоныПоКинопоиску(Команда)
	ЗаполнитьПроверка(Новый структура("Фильм,СезоныСерии",Ложь,Истина));
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДлительнуюОперацию(Показать)
	
	Элементы.Группа9.Видимость = НЕ Показать;
	Элементы.ФормаЗаписатьИЗакрыть.Видимость = НЕ Показать;
	Элементы.ФормаЗаписать.Видимость = НЕ Показать;
	Элементы.ФормаУдалить.Видимость = НЕ Показать;
	Элементы.ФормаЗакрыть.Видимость = НЕ Показать;
	Элементы.ДлительнаяОперация.Видимость = Показать;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоКинопоискуСервер(Фильм,СезоныСерии)
	Если Фильм Тогда 
		kinopoisk_unofficial_api.ОбновитьФильмНаСервере(Объект);
		ОбновитьСписокЗначенийЖанры();	
		ОбновитьСписокЗначенийСтраны();
	КонецЕсли;
	Если СезоныСерии Тогда
		kinopoisk_unofficial_api.ОбновитьСезоныСерииНаСервере(Объект);
		СортировкаСерий();
	КонецЕсли;		
КонецПроцедуры   

&НаСервере
Процедура СортировкаСерий()
	Объект.Серии.Сортировать("Сезон,Серия");		
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПросмотренныеСерии(Команда)
	Элементы.ПоказатьПросмотренныеСерии.Пометка = Не Элементы.ПоказатьПросмотренныеСерии.Пометка; 	
	ПоказатьСкрытьСерии(Элементы.ПоказатьПросмотренныеСерии.Пометка);	
КонецПроцедуры  

&НаКлиенте
Процедура ПоказатьСкрытьСерии(Пометка)
	Если Пометка Тогда
		Элементы.Серии.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый структура());
	Иначе
		Элементы.Серии.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый структура("Просмотрена",Ложь));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЖанрыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.ФормаПодбораСпискаЗначений",Новый структура("ТипДанных,Данные", "Жанры",Жанры.ВыгрузитьЗначения()),,,,,Новый ОписаниеОповещения("ЗаполнитьИзФормыПодбораСпискаЗначений",ЭтаФорма,"Жанры"));
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзФормыПодбораСпискаЗначений(Список, Поле) Экспорт 
	Если НЕ Список = Неопределено Тогда
		ЭтаФорма[Поле].ЗагрузитьЗначения(Список);	
		Если Поле = "Жанры" Тогда
			ЖанрыПриИзмененииНаСервере();
		ИначеЕсли Поле = "Страны" Тогда 
			СтраныПриИзмененииНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтраныНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("ОбщаяФорма.ФормаПодбораСпискаЗначений",Новый структура("ТипДанных,Данные", "Страны",Страны.ВыгрузитьЗначения()),,,,,Новый ОписаниеОповещения("ЗаполнитьИзФормыПодбораСпискаЗначений",ЭтаФорма,"Страны"));
КонецПроцедуры

&НаСервере
Процедура СвернутьТабличнуюЧастьНаСервере(ИмяТабличнойЧасти,ИмяСтолбца)
	ТЗ=Объект[ИмяТабличнойЧасти].Выгрузить();
	ТЗ.Свернуть(ИмяСтолбца);
	Объект[ИмяТабличнойЧасти].Загрузить(ТЗ);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВставитьИзБуфераОбмена(Команда)
	Если СредстваБуфераОбмена.ИспользованиеДоступно() Тогда
		Если Ждать СредстваБуфераОбмена.СодержитДанныеАсинх(СтандартныйФорматДанныхБуфераОбмена.Текст) Тогда
			СтрокаБуфераОбмена = Ждать СредстваБуфераОбмена.ПолучитьДанныеАсинх(СтандартныйФорматДанныхБуфераОбмена.Текст);
			ЗаполнитьКодКинопоискаПоСсылке(СтрокаБуфераОбмена,Неопределено);
		КонецЕсли;
	Иначе
		ОткрытьФорму("ОбщаяФорма.ФормаВводаСсылкиКинопоиск",,ЭтаФорма,,,,Новый ОписаниеОповещения("ЗаполнитьКодКинопоискаПоСсылке",ЭтотОбъект),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКодКинопоискаПоСсылке(Ссылка,п2) Экспорт
	Если Ссылка = "" ИЛИ СтрНайти(Ссылка,"kinopoisk.ru")=0 Тогда Возврат КонецЕсли;
	Фильм = СтрНайти(Ссылка,"film/");
	Сериал = СтрНайти(Ссылка,"series/");
	id = Прав(Ссылка,СтрДлина(Ссылка)-?(Сериал=0,Фильм + 4,Сериал + 6));
	Если Прав(id,1) = "/" Тогда
		id = Лев(id,СтрДлина(id)-1);
	КонецЕсли;
	Объект.КодКинопоиск = id;
	ЗаполнитьПроверка(Новый структура("Фильм,СезоныСерии",Истина,Ложь));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Дубль = ПроверитьНаДубль(Объект.Ссылка,Объект.КодКинопоиск);
	Если НЕ Дубль = Неопределено Тогда
		Отказ = Истина;
		ПоказатьВопросДубль(Дубль);
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьНаДубль(Ссылка,КодКинопоиск)
	
	Если НЕ КодКинопоиск = "" И Константы.ПроверкаНаДубльПоКодуКинопоиска.Получить() Тогда
		Запрос = Новый запрос("ВЫБРАТЬ
		|	Кино.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Кино КАК Кино
		|ГДЕ
		|	Кино.Ссылка <> &Ссылка
		|	И Кино.КодКинопоиск = &КодКинопоиск");
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("КодКинопоиск",КодКинопоиск);
		ЗВ = Запрос.Выполнить();	
		Если ЗВ.Пустой() Тогда
			Возврат Неопределено
		КонецЕсли;
		Таб = ЗВ.Выгрузить();
		Возврат Таб[0].Ссылка;		
	Иначе
		Возврат Неопределено		
	КонецЕсли;

КонецФункции

&НаКлиенте
Асинх Процедура ПоказатьВопросДубль(Дубль) Экспорт	
	ТекстВопроса = Нстр("ru = 'Ошибка! Кино с таким кодом кинопоиска уже существует. Открыть существующее кино без записи текущего?';
		|en = 'Error! A movie with this kinopoisk code already exists. Open an existing movie without saving the current one?'");
	Результат = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет);	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыполняетсяЗапись = Истина;
		ПоказатьЗначение(,Дубль);
		ЭтаФорма.Модифицированность = Ложь;
		ЭтаФорма.Закрыть();
	КонецЕсли;	
КонецПроцедуры

ВыполняетсяЗапись = Ложь;